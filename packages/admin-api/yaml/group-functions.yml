authorizer:
  handler: ./functions/authorizer/authorizer.handler
  name: hrk-apigateway-admin-authorizer-${sls:stage}
  description: Authorizer for Hrk Admin API stage ${sls:stage}.
  memorySize: 256
  layers:
    - arn:aws:lambda:eu-north-1:094274105915:layer:AWSLambdaPowertoolsTypeScript:27
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - cognito-idp:AdminGetUser
      Resource:
        - "arn:aws:cognito-idp:${self:provider.region}:${aws:accountId}:userpool/*"

createGroup:
  handler: functions/group/create.handler
  name: hrk-admin-create-group-${sls:stage}
  description: Admin creates a new group for user.
  memorySize: 256
  events:
    - httpApi:
        method: POST  
        path: /groups
        authorizer: authorizer
  environment:
    COGNITO_USER_POOL_ID: ${self:custom.COGNITO_USER_POOL_ID}
    MAIN_TABLE: ${self:custom.mainTableName}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource:
        - "arn:aws:dynamodb:${self:provider.region}:${aws:accountId}:table/${self:custom.mainTableName}"
    - Effect: Allow
      Action:
        - cognito-idp:AdminGetUser
        - cognito-idp:CreateGroup
      Resource:
        - arn:aws:cognito-idp:${self:provider.region}:${aws:accountId}:userpool/${self:custom.COGNITO_USER_POOL_ID}

deleteGroup:
  handler: functions/group/delete.handler
  name: hrk-admin-delete-group-${sls:stage}
  description: Admin deletes a group.
  memorySize: 256
  events:
    - httpApi:
        method: DELETE
        path: /groups/{name}
        authorizer: authorizer
  environment:
    COGNITO_USER_POOL_ID: ${self:custom.COGNITO_USER_POOL_ID}
    MAIN_TABLE: ${self:custom.mainTableName}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:Query
        - dynamodb:DeleteItem
        - dynamodb:BatchWriteItem
      Resource:
        - "arn:aws:dynamodb:${self:provider.region}:${aws:accountId}:table/${self:custom.mainTableName}"
    - Effect: Allow
      Action:
        - cognito-idp:AdminGetUser
        - cognito-idp:DeleteGroup
      Resource:
        - arn:aws:cognito-idp:${self:provider.region}:${aws:accountId}:userpool/${self:custom.COGNITO_USER_POOL_ID}

getGroup:
  handler: functions/group/get.handler
  name: hrk-get-group-${sls:stage}
  description: Get a group for user.
  memorySize: 256
  events:
    - httpApi:
        method: GET
        path: /groups/{name}
        authorizer: authorizer
  environment:
    COGNITO_USER_POOL_ID: ${self:custom.COGNITO_USER_POOL_ID}
    MAIN_TABLE: ${self:custom.mainTableName}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:GetItem
      Resource:
        - "arn:aws:dynamodb:${self:provider.region}:${aws:accountId}:table/${self:custom.mainTableName}"

listGroups:
    handler: functions/group/list.handler
    name: hrk-list-groups-${sls:stage}
    description: List all groups.
    memorySize: 256
    events:
      - httpApi:
          method: GET
          path: /groups
          authorizer: authorizer
    environment:
      COGNITO_USER_POOL_ID: ${self:custom.COGNITO_USER_POOL_ID}
      MAIN_TABLE: ${self:custom.mainTableName}
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - dynamodb:Scan
        Resource:
          - "arn:aws:dynamodb:${self:provider.region}:${aws:accountId}:table/${self:custom.mainTableName}"

updateGroup:
    handler: functions/group/update.handler
    name: hrk-update-group-${sls:stage}
    description: Update a group's name or description.
    memorySize: 256
    events:
      - httpApi:
          method: PATCH
          path: /groups/{name}
          authorizer: authorizer
    environment:
      COGNITO_USER_POOL_ID: ${self:custom.COGNITO_USER_POOL_ID}
      MAIN_TABLE: ${self:custom.mainTableName}
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - dynamodb:UpdateItem
        Resource:
          - "arn:aws:dynamodb:${self:provider.region}:${aws:accountId}:table/${self:custom.mainTableName}"

batchGetGroups:
  handler: functions/group/batch-get.handler
  name: hrk-batch-get-groups-${sls:stage}
  description: Get details for multiple groups in a single request.
  memorySize: 256
  events:
    - httpApi:
        method: POST
        path: /groups/batch-get
        authorizer: authorizer
  environment:
    MAIN_TABLE: ${self:custom.mainTableName}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:BatchGetItem
      Resource:
        - "arn:aws:dynamodb:${self:provider.region}:${aws:accountId}:table/${self:custom.mainTableName}"

listPublicGroups:
    # ÄNDRING: Nytt namn och ny handler-sökväg
    handler: functions/group/listPublic.handler
    name: hrk-list-public-groups-${sls:stage}
    description: List all groups with only public information (name, slug, location).
    memorySize: 256
    events:
      - httpApi:
          method: GET
          # ÄNDRING: En ny, unik sökväg för detta API-anrop
          path: /groups/public-list
          authorizer: authorizer # Samma authorizer, då alla inloggade ska kunna se listan
    environment:
      # Denna funktion behöver bara känna till tabellnamnet
      MAIN_TABLE: ${self:custom.mainTableName}
    iamRoleStatements:
      # Samma behörigheter som förut, då den också behöver läsa från tabellen
      - Effect: "Allow"
        Action:
          - dynamodb:Scan
        Resource:
          - "arn:aws:dynamodb:${self:provider.region}:${aws:accountId}:table/${self:custom.mainTableName}"
    